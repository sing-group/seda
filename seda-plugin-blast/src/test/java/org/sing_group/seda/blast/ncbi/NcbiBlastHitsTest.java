/*
 * #%L
 * SEquence DAtaset builder BLAST plugin
 * %%
 * Copyright (C) 2017 - 2020 Jorge Vieira, Cristina Vieira, Noé Vázquez, Miguel Reboiro-Jato and Hugo López-Fernández
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */
package org.sing_group.seda.blast.ncbi;

import static java.nio.file.Files.readAllLines;
import static java.util.Arrays.asList;
import static java.util.stream.Collectors.joining;

import java.io.IOException;
import java.nio.file.Paths;

import org.junit.Assert;
import org.junit.Test;
import org.xml.sax.SAXException;

public class NcbiBlastHitsTest {

  @Test
  public void testSubmissionSuccess() throws IOException, SAXException {
    String response =
      readAllLines(Paths.get("src/test/resources/ncbi_web/ncbi_web_output_hits.xml")).stream().collect(joining("\n"));

    NcbiBlastHits hits = NcbiBlastHits.fromXml(response);

    Assert.assertEquals(100, hits.size());
    Assert.assertEquals(1, hits.get(1).getHspHseqs().size());
    Assert.assertEquals(
      new NcbiBlastHit(
        "XM_021945154",
        "PREDICTED: Prunus avium F-box/kelch-repeat protein At3g06240-like (LOC110745079), mRNA",
        asList(
          "ATGACATTCACATTACGTAAGAACGAGATCTTAATCGACATCCTAGTAAGACTACCTGCAAAATCCCTCATTCGGTTTCTATGTACATGCAAGTCGTGGAGTGATTTGATTGGCAGCTCAAGTTTTGTTCGCACACACCTTCATAGGAATGTCACAAAACATGCTCATGTCTATCTACTTTGCCTTCACCACCCACAATTTGAACGTCAGAACGACAATGATGACCCATATGATATAGAAGAACTTCAGTGGTCACTTTTTTCCAATGAAAAGTTTGAGCAGTTCTCCAATTTAAGCCATCCTTTAGAAAACACAGAGCATTTTAGAATATATGGTTCAAGCAATGGTTTAGTTTGCATGTCGGATGAGATATTGAATTTCGATAGTCCTATACAAATATGGAACCCATCGGTTAGGAAATTCAGGACTCTTCCAATGAGCACCAACATTAACATGAAATTTTCCCATGTTTCTCTCCAATTTGGGTTCCACCCCGGGGTTAATGACTACAAGGCTGTAAGGATGATGCATACCAACAAAGGTGCCTTGGCAGTTGAGGTTTATAGTCTTAAAACAGATTGTTGGAAGATGATTGAAGTAATTCCTCCTTGGTTAAAATGCACTTGGAAGCATCATAAGGGTACATTTTTTAATGGAGTAGCATACCACATCATTGAGAAAGGTCCTATATGCAGCATTATGTCATTCGATTCAGGCAGCGAAAAATTCGAAGAATTCATAACACCAGATGCCATTTGCAGTCCACGGGAGTTATGCATTGACGTCTACAAGGAACTAATTTGCTTGATTTTTGGATTTTATGGTTGTGATGAGGAGGGCATGGACAAAGTTGACTTGTGGGTTCTGCAGGAAAAACGGTGGAAACAATTGTGTCCTTTTATTTTTCCTTTGAATCATTGTCATCGTACAATCGGGATTAGTATAGATAATGAACTCATAATGCAAAGAAGAGATTTCATTAAAGGAGTAGCATATCTGTATTTGTGTAATTACGAATCCAAGCAAGTTCTTGAAACAGGAATTCAATTGGCCGTCATGAGATATGGCGAAATCGAATTCTTGTTTGCAATTACTTACACAGAAAGTTTGGTTTTGCTCAATAGTTAT"
        )
      ),
      hits.get(1)
    );
  }

  @Test
  public void testSubmissionSuccessMultipleHspHseqs() throws IOException, SAXException {
    String response =
      readAllLines(Paths.get("src/test/resources/ncbi_web/ncbi_web_output_hits_multiple.xml")).stream().collect(joining("\n"));

    NcbiBlastHits hits = NcbiBlastHits.fromXml(response);

    Assert.assertEquals(2, hits.size());
    Assert.assertEquals(2, hits.get(1).getHspHseqs().size());
    Assert.assertEquals(
      new NcbiBlastHit(
        "XM_021945154",
        "PREDICTED: Prunus avium F-box/kelch-repeat protein At3g06240-like (LOC110745079), mRNA",
        asList(
          "ATGACATTCACATTACGTAAGAACGAGATCTTAATCGACATCCTAGTAAGACTACCTGCAAAATCCCTCATTCGGTTTCTATGTACATGCAAGTCGTGGAGTGATTTGATTGGCAGCTCAAGTTTTGTTCGCACACACCTTCATAGGAATGTCACAAAACATGCTCATGTCTATCTACTTTGCCTTCACCACCCACAATTTGAACGTCAGAACGACAATGATGACCCATATGATATAGAAGAACTTCAGTGGTCACTTTTTTCCAATGAAAAGTTTGAGCAGTTCTCCAATTTAAGCCATCCTTTAGAAAACACAGAGCATTTTAGAATATATGGTTCAAGCAATGGTTTAGTTTGCATGTCGGATGAGATATTGAATTTCGATAGTCCTATACAAATATGGAACCCATCGGTTAGGAAATTCAGGACTCTTCCAATGAGCACCAACATTAACATGAAATTTTCCCATGTTTCTCTCCAATTTGGGTTCCACCCCGGGGTTAATGACTACAAGGCTGTAAGGATGATGCATACCAACAAAGGTGCCTTGGCAGTTGAGGTTTATAGTCTTAAAACAGATTGTTGGAAGATGATTGAAGTAATTCCTCCTTGGTTAAAATGCACTTGGAAGCATCATAAGGGTACATTTTTTAATGGAGTAGCATACCACATCATTGAGAAAGGTCCTATATGCAGCATTATGTCATTCGATTCAGGCAGCGAAAAATTCGAAGAATTCATAACACCAGATGCCATTTGCAGTCCACGGGAGTTATGCATTGACGTCTACAAGGAACTAATTTGCTTGATTTTTGGATTTTATGGTTGTGATGAGGAGGGCATGGACAAAGTTGACTTGTGGGTTCTGCAGGAAAAACGGTGGAAACAATTGTGTCCTTTTATTTTTCCTTTGAATCATTGTCATCGTACAATCGGGATTAGTATAGATAATGAACTCATAATGCAAAGAAGAGATTTCATTAAAGGAGTAGCATATCTGTATTTGTGTAATTACGAATCCAAGCAAGTTCTTGAAACAGGAATTCAATTGGCCGTCATGAGATATGGCGAAATCGAATTCTTGTTTGCAATTACTTACACAGAAAGTTTGGTTTTGCTCAATAGTTAT",
          "CTGACATTCACATTACGTAAGAACGAGATCTTAATCGACATCCTAGTAAGACTACCTGCAAAATCCCTCATTCGGTTTCTATGTACATGCAAGTCGTGGAGTGATTTGATTGGCAGCTCAAGTTTTGTTCGCACACACCTTCATAGGAATGTCACAAAACATGCTCATGTCTATCTACTTTGCCTTCACCACCCACAATTTGAACGTCAGAACGACAATGATGACCCATATGATATAGAAGAACTTCAGTGGTCACTTTTTTCCAATGAAAAGTTTGAGCAGTTCTCCAATTTAAGCCATCCTTTAGAAAACACAGAGCATTTTAGAATATATGGTTCAAGCAATGGTTTAGTTTGCATGTCGGATGAGATATTGAATTTCGATAGTCCTATACAAATATGGAACCCATCGGTTAGGAAATTCAGGACTCTTCCAATGAGCACCAACATTAACATGAAATTTTCCCATGTTTCTCTCCAATTTGGGTTCCACCCCGGGGTTAATGACTACAAGGCTGTAAGGATGATGCATACCAACAAAGGTGCCTTGGCAGTTGAGGTTTATAGTCTTAAAACAGATTGTTGGAAGATGATTGAAGTAATTCCTCCTTGGTTAAAATGCACTTGGAAGCATCATAAGGGTACATTTTTTAATGGAGTAGCATACCACATCATTGAGAAAGGTCCTATATGCAGCATTATGTCATTCGATTCAGGCAGCGAAAAATTCGAAGAATTCATAACACCAGATGCCATTTGCAGTCCACGGGAGTTATGCATTGACGTCTACAAGGAACTAATTTGCTTGATTTTTGGATTTTATGGTTGTGATGAGGAGGGCATGGACAAAGTTGACTTGTGGGTTCTGCAGGAAAAACGGTGGAAACAATTGTGTCCTTTTATTTTTCCTTTGAATCATTGTCATCGTACAATCGGGATTAGTATAGATAATGAACTCATAATGCAAAGAAGAGATTTCATTAAAGGAGTAGCATATCTGTATTTGTGTAATTACGAATCCAAGCAAGTTCTTGAAACAGGAATTCAATTGGCCGTCATGAGATATGGCGAAATCGAATTCTTGTTTGCAATTACTTACACAGAAAGTTTGGTTTTGCTCAATAGTTAT"
        )
      ),
      hits.get(1)
    );
  }
}
